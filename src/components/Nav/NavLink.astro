---
import { Icon } from "astro-icon/components";
import { getRelativeLocaleUrl } from "astro:i18n";

// utils
import { getLocaleFromUrl } from "@js/localeUtils";

// data
import { type navLinkItem } from "@config/types/configDataTypes";

interface Props {
  navItem: navLinkItem;
  class?: string;
  icon?: string;
  noIcon?: boolean;
}

const { navItem, class: className, noIcon = false } = Astro.props as Props;
const { text, link, newTab = false, icon } = navItem;

// get the current page locale to use in links to other pages
const currLocale = getLocaleFromUrl(Astro.url);

const domain = import.meta.env.SITE; // pulls from astro.config.mjs
let actualLink: string;
if (!link.includes(domain) && !link.startsWith("/") && !link.startsWith("#")) {
  // it is an external link
  actualLink = link;
} else {
  // internal link, so we need to add the locale to the link
  actualLink = getRelativeLocaleUrl(currLocale, link);
}
// remove trailing slash so IDs will work
if (actualLink.endsWith("/")) {
  actualLink = actualLink.slice(0, -1);
}
---

<li class="w-full">
  <a
    class:list={[
      `primary-focus relative flex items-center gap-1.5 px-4 py-1.5 leading-tight text-base-900 transition hover:text-base-600 dark:text-base-200/90 dark:hover:text-base-50 ${className}`,
      {
        // styling for current active page link
        "text-primary-600 dark:text-primary-400":
          Astro.url.pathname === actualLink,
      },
    ]}
    href={actualLink}
    target={newTab ? "_blank" : ""}
    rel={newTab ? "noopener noreferrer" : ""}
    aria-label={text}
  >
    {icon && !noIcon && <Icon name={icon} aria-hidden="true" class="size-4" />}

    {text}
  </a>
</li>
